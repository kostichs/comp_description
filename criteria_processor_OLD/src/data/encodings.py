"""
–ú–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–¥–∏—Ä–æ–≤–∫–∞–º–∏ —Ñ–∞–π–ª–æ–≤
"""

import chardet
import pandas as pd
from src.utils.logging import log_info, log_error, log_debug

def detect_encoding(file_path):
    """–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫–æ–¥–∏—Ä–æ–≤–∫—É —Ñ–∞–π–ª–∞"""
    try:
        with open(file_path, 'rb') as f:
            raw_data = f.read(10000)  # –ß–∏—Ç–∞–µ–º –ø–µ—Ä–≤—ã–µ 10KB –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è
            result = chardet.detect(raw_data)
            encoding = result['encoding']
            confidence = result['confidence']
            log_debug(f"üìù –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∞ {file_path}: {encoding} (—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence:.2f})")
            return encoding
    except Exception as e:
        log_error(f"‚ùå –û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –¥–ª—è {file_path}: {e}")
        return 'utf-8'

def load_csv_with_encoding(file_path):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç CSV —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫–∏"""
    # –°–ø–∏—Å–æ–∫ –∫–æ–¥–∏—Ä–æ–≤–æ–∫ –¥–ª—è –ø–æ–ø—ã—Ç–æ–∫
    encodings_to_try = [
        detect_encoding(file_path),  # –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
        'utf-8-sig',                 # UTF-8 —Å BOM
        'utf-8',                     # –û–±—ã—á–Ω—ã–π UTF-8
        'windows-1251',              # –ö–∏—Ä–∏–ª–ª–∏—Ü–∞ Windows
        'cp1252',                    # Windows Western
        'iso-8859-1',                # Latin-1
        'latin1'                     # Fallback
    ]
    
    # –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã
    encodings_to_try = list(dict.fromkeys(encodings_to_try))
    
    for encoding in encodings_to_try:
        if not encoding:
            continue
            
        try:
            log_debug(f"üîÑ –ü—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å {file_path} —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π: {encoding}")
            df = pd.read_csv(file_path, encoding=encoding)
            log_info(f"‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π: {encoding}")
            return df
        except (UnicodeDecodeError, UnicodeError) as e:
            log_debug(f"‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π {encoding}: {e}")
            continue
        except Exception as e:
            log_error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ {file_path}: {e}")
            raise
    
    # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–º–æ–≥–ª–æ
    raise UnicodeError(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–¥–∏—Ä–æ–≤–∫—É –¥–ª—è —Ñ–∞–π–ª–∞: {file_path}") 