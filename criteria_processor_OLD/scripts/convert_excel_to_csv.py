#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ Excel —Ñ–∞–π–ª–æ–≤ –≤ CSV –≤ –ø–∞–ø–∫–µ criteria
"""

import os
import sys
import pandas as pd
import glob
from pathlib import Path

def convert_excel_file_to_csv(excel_file_path):
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –æ–¥–∏–Ω Excel —Ñ–∞–π–ª –≤ CSV"""
    print(f"üìä –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª: {os.path.basename(excel_file_path)}")
    
    try:
        # –ß–∏—Ç–∞–µ–º Excel —Ñ–∞–π–ª
        df = pd.read_excel(excel_file_path)
        
        # –°–æ–∑–¥–∞–µ–º –ø—É—Ç—å –¥–ª—è CSV —Ñ–∞–π–ª–∞
        base_name = os.path.splitext(os.path.basename(excel_file_path))[0]
        csv_file_path = os.path.join(os.path.dirname(excel_file_path), f"Criteria_{base_name}.csv")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ CSV
        df.to_csv(csv_file_path, index=False, encoding='utf-8-sig')
        
        print(f"‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {os.path.basename(excel_file_path)} ‚Üí {os.path.basename(csv_file_path)}")
        print(f"üìã –°—Ç—Ä–æ–∫: {len(df)}, –ö–æ–ª–æ–Ω–æ–∫: {len(df.columns)}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
        print("üîç –ü—Ä–µ–≤—å—é –¥–∞–Ω–Ω—ã—Ö:")
        print(df.head().to_string())
        print("-" * 60)
        
        return csv_file_path
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {excel_file_path}: {e}")
        return None

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ criteria
    criteria_dir = os.path.join(os.path.dirname(os.path.dirname(__file__)), "criteria")
    
    if not os.path.exists(criteria_dir):
        print(f"‚ùå –ü–∞–ø–∫–∞ criteria –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: {criteria_dir}")
        return False
    
    print(f"üìÅ –ò—â–µ–º Excel —Ñ–∞–π–ª—ã –≤: {criteria_dir}")
    
    # –ò—â–µ–º –≤—Å–µ Excel —Ñ–∞–π–ª—ã
    excel_files = glob.glob(os.path.join(criteria_dir, "*.xlsx")) + \
                  glob.glob(os.path.join(criteria_dir, "*.xls"))
    
    if not excel_files:
        print("‚úÖ Excel —Ñ–∞–π–ª–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        return True
    
    print(f"üìä –ù–∞–π–¥–µ–Ω–æ Excel —Ñ–∞–π–ª–æ–≤: {len(excel_files)}")
    
    converted = 0
    failed = 0
    
    for excel_file in excel_files:
        result = convert_excel_file_to_csv(excel_file)
        if result:
            converted += 1
        else:
            failed += 1
    
    print("=" * 60)
    print(f"üìä –ò—Ç–æ–≥–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏:")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ: {converted}")
    print(f"‚ùå –û—à–∏–±–æ–∫: {failed}")
    
    if converted > 0:
        print("\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –Ω–æ–≤—ã—Ö CSV —Ñ–∞–π–ª–æ–≤")
        print("2. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–∂–∏–¥–∞–µ–º–æ–π")
        print("3. –ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–µ Excel —Ñ–∞–π–ª—ã")
    
    return failed == 0

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1) 