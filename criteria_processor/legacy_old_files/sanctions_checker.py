"""
–ú–æ–¥—É–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–º–ø–∞–Ω–∏–π –Ω–∞ —Å–∞–Ω–∫—Ü–∏–æ–Ω–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
"""

import re
from typing import Tuple
from logger_config import log_info, log_error, log_debug

# –°–ø–∏—Å–æ–∫ —Å—Ç—Ä–∞–Ω-—Å–∞–Ω–∫—Ü–∏–π —Å–æ–≥–ª–∞—Å–Ω–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞
SANCTIONED_COUNTRIES = {
    'iran': ['iran', 'iranian', 'tehran', 'isfahan', 'mashhad'],
    'russia': ['russia', 'russian', 'moscow', 'petersburg', 'rf', 'russian federation'],
    'china': ['china', 'chinese', 'beijing', 'shanghai', 'prc', "people's republic of china"],
    'turkmenistan': ['turkmenistan', 'turkmen', 'ashgabat'],
    'north_korea': ['north korea', 'dprk', 'pyongyang', 'democratic people\'s republic of korea']
}

def check_sanctions(company_name: str, description: str, website: str = "") -> Tuple[bool, str]:
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–æ–º–ø–∞–Ω–∏—é –Ω–∞ –ø–æ–ø–∞–¥–∞–Ω–∏–µ –ø–æ–¥ —Å–∞–Ω–∫—Ü–∏–∏
    
    Args:
        company_name: –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏
        description: –û–ø–∏—Å–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏
        website: –í–µ–±-—Å–∞–π—Ç –∫–æ–º–ø–∞–Ω–∏–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    
    Returns:
        Tuple[bool, str]: (is_sanctioned, reason)
    """
    # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    text_to_check = f"{company_name} {description} {website}".lower()
    
    log_debug(f"üîç Checking sanctions for: {company_name}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—É—é —Å—Ç—Ä–∞–Ω—É-—Å–∞–Ω–∫—Ü–∏—é
    for country, keywords in SANCTIONED_COUNTRIES.items():
        for keyword in keywords:
            if keyword in text_to_check:
                reason = f"Company appears to be from sanctioned country: {country.replace('_', ' ').title()}"
                log_debug(f"üö´ –°–ê–ù–ö–¶–ò–Ø –û–ë–ù–ê–†–£–ñ–ï–ù–ê: {reason}")
                return True, reason
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ –¥–æ–º–µ–Ω–∞–º
    if website:
        sanctioned_domains = ['.ru', '.ir', '.cn', '.kp', '.tm']
        for domain in sanctioned_domains:
            if domain in website.lower():
                country_map = {'.ru': 'Russia', '.ir': 'Iran', '.cn': 'China', '.kp': 'North Korea', '.tm': 'Turkmenistan'}
                reason = f"Company website domain indicates sanctioned country: {country_map[domain]}"
                log_debug(f"üö´ –°–ê–ù–ö–¶–ò–Ø –û–ë–ù–ê–†–£–ñ–ï–ù–ê: {reason}")
                return True, reason
    
    log_debug(f"‚úÖ –°–∞–Ω–∫—Ü–∏–∏ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã")
    return False, "No sanctions detected"

def apply_sanctions_filter(companies_data, verbose=True):
    """
    –ü—Ä–∏–º–µ–Ω—è–µ—Ç —Å–∞–Ω–∫—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∏–ª—å—Ç—Ä –∫ —Å–ø–∏—Å–∫—É –∫–æ–º–ø–∞–Ω–∏–π
    
    Args:
        companies_data: DataFrame —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–æ–º–ø–∞–Ω–∏–π
        verbose: –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –¥–µ—Ç–∞–ª–∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    
    Returns:
        Tuple[DataFrame, list]: (filtered_companies, sanctioned_list)
    """
    from config import DEBUG_SANCTIONS
    
    log_info(f"ÔøΩÔøΩ –ü—Ä–∏–º–µ–Ω—è–µ–º —Å–∞–Ω–∫—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –∫ {len(companies_data)} –∫–æ–º–ø–∞–Ω–∏—è–º")
    
    sanctioned_companies = []
    filtered_indices = []
    
    for idx, row in companies_data.iterrows():
        company = row['Company_Name']
        description = row.get('Description', '')
        website = row.get('Official_Website', '')
        
        is_sanctioned, reason = check_sanctions(company, description, website)
        
        if is_sanctioned:
            sanctioned_companies.append({
                'company': company,
                'reason': reason
            })
            if DEBUG_SANCTIONS:
                log_info(f"üö´ –ò–°–ö–õ–Æ–ß–ï–ù–û: {company} - {reason}")
        else:
            filtered_indices.append(idx)
    
    # Filter DataFrame
    filtered_df = companies_data.loc[filtered_indices].reset_index(drop=True)
    
    log_info(f"üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–∞–Ω–∫—Ü–∏–æ–Ω–Ω–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏:")
    log_info(f"   –ò—Å–∫–ª—é—á–µ–Ω–æ: {len(sanctioned_companies)} –∫–æ–º–ø–∞–Ω–∏–π")
    log_info(f"   –ü—Ä–æ—à–ª–æ —Ñ–∏–ª—å—Ç—Ä: {len(filtered_df)} –∫–æ–º–ø–∞–Ω–∏–π")
    
    return filtered_df, sanctioned_companies 