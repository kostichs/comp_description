"""
–ú–æ–¥—É–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Mandatory –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤
"""

from src.criteria.base import get_structured_response
from src.external.serper import get_information_for_criterion
from src.utils.config import PROCESSING_CONFIG
from src.utils.logging import log_info, log_error

def check_mandatory_criteria(description, company_info, audience, mandatory_df):
    """Check mandatory criteria for an audience - updated for manager requirements"""
    mandatory = mandatory_df[mandatory_df["Target Audience"] == audience]
    failed = False
    nd_count = 0
    total = 0
    
    for _, row in mandatory.iterrows():
        crit = row["Criteria"]
        place = row.get("Place", "gen_descr")
        search_query = row.get("Search Query", None)
        
        log_info(f"‚ö†Ô∏è  Mandatory {audience}: {crit}", console=False)
        
        # –ù–û–í–û–ï –¢–†–ï–ë–û–í–ê–ù–ò–ï: –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Serper –¥–ª—è mandatory –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤
        if PROCESSING_CONFIG['use_serper_for_mandatory'] and place == "gen_descr":
            log_info(f"üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ website –ø–æ–∏—Å–∫ –¥–ª—è mandatory –∫—Ä–∏—Ç–µ—Ä–∏—è", console=False)
            place = "website"
        
        # Get information based on the Place field
        information, source_desc = get_information_for_criterion(company_info, place, search_query)
        log_info(f"üîç –ò—Å—Ç–æ—á–Ω–∏–∫: {source_desc}", console=False)
        
        result, error = get_structured_response("mandatory", information, crit, "standard")
        
        if error:
            log_error(f"‚ùå –û—à–∏–±–∫–∞ Mandatory {audience} {crit}: {error}")
            company_info[f"Mandatory_{audience}_{crit}"] = "Error"
            # –°—á–∏—Ç–∞–µ–º –æ—à–∏–±–∫–∏ –∫–∞–∫ ND –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            nd_count += 1
        else:
            log_info(f"‚û°Ô∏è  {result}", console=False)
            company_info[f"Mandatory_{audience}_{crit}"] = result
            
            # –ù–û–í–û–ï –¢–†–ï–ë–û–í–ê–ù–ò–ï: "Not Pass" –∏—Å–∫–ª—é—á–∞–µ—Ç, ND –Ω–µ –∏—Å–∫–ª—é—á–∞–µ—Ç
            if result == "Not Passed":
                failed = True
                log_info(f"üö´ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –ü–†–û–í–ê–õ mandatory –∫—Ä–∏—Ç–µ—Ä–∏—è - –∞—É–¥–∏—Ç–æ—Ä–∏—è –∏—Å–∫–ª—é—á–∞–µ—Ç—Å—è", console=False)
            elif result == "ND":
                nd_count += 1
                log_info(f"‚ùì ND –Ω–∞ mandatory –∫—Ä–∏—Ç–µ—Ä–∏–∏ - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É", console=False)
        
        total += 1
        
        # –ù–û–í–û–ï –¢–†–ï–ë–û–í–ê–ù–ò–ï: –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ "Not Passed", –Ω–µ –ø—Ä–∏ ND
        if failed:
            break
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ ND –¥–ª—è mandatory –∫—Ä–∏—Ç–µ—Ä–∏–µ–≤
    if total > 0:
        company_info[f"ND_Rate_Mandatory_{audience}"] = round(nd_count / total, 2)
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º True –µ—Å–ª–∏ –ù–ï –ø—Ä–æ–≤–∞–ª–∏–ª—Å—è –Ω–∏ –æ–¥–∏–Ω mandatory (ND —Ä–∞–∑—Ä–µ—à–µ–Ω—ã)
    return not failed 