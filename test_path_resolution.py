#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á—Ç–æ –ø—É—Ç–∏ —Ä–µ–∑–æ–ª–≤—è—Ç—Å—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤ –ª—é–±–æ–π —Å—Ä–µ–¥–µ
"""

import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å
sys.path.insert(0, str(Path(__file__).parent / "src"))

from src.data_io import PROJECT_ROOT, SESSIONS_DIR, SESSIONS_METADATA_FILE

def test_path_resolution():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø—É—Ç–µ–π"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –ø—É—Ç–µ–π...")
    print("=" * 50)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ä–µ–¥—É
    print(f"üñ•Ô∏è  –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: {os.name}")
    print(f"üìÅ –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {Path.cwd()}")
    print(f"üêç Python –∏—Å–ø–æ–ª–Ω—è–µ—Ç—Å—è –∏–∑: {sys.executable}")
    print()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –ø—É—Ç–∏
    print("üìç –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –ø—É—Ç–∏:")
    print(f"   PROJECT_ROOT: {PROJECT_ROOT}")
    print(f"   SESSIONS_DIR: {SESSIONS_DIR}")
    print(f"   SESSIONS_METADATA_FILE: {SESSIONS_METADATA_FILE}")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø—É—Ç–µ–π
    print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è:")
    print(f"   PROJECT_ROOT exists: {PROJECT_ROOT.exists()}")
    print(f"   SESSIONS_DIR exists: {SESSIONS_DIR.exists()}")
    print(f"   SESSIONS_METADATA_FILE exists: {SESSIONS_METADATA_FILE.exists()}")
    print()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–µ –ø—É—Ç–∏
    print("üóÇÔ∏è  –ê–±—Å–æ–ª—é—Ç–Ω—ã–µ –ø—É—Ç–∏:")
    print(f"   PROJECT_ROOT.absolute(): {PROJECT_ROOT.absolute()}")
    print(f"   SESSIONS_DIR.absolute(): {SESSIONS_DIR.absolute()}")
    print(f"   SESSIONS_METADATA_FILE.absolute(): {SESSIONS_METADATA_FILE.absolute()}")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–æ—É—Ç–µ—Ä–∞—Ö
    print("üîó –¢–µ—Å—Ç —Ä–æ—É—Ç–µ—Ä–∞ (–∏–º–∏—Ç–∞—Ü–∏—è):")
    session_id = "test_session_123"
    session_path = SESSIONS_DIR / session_id
    print(f"   –ü—É—Ç—å —Å–µ—Å—Å–∏–∏: {session_path}")
    print(f"   –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å —Å–µ—Å—Å–∏–∏: {session_path.absolute()}")
    print()
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ä–µ–¥—É
    environment = "Docker Container" if str(PROJECT_ROOT).startswith("/app") else "Local Development"
    print(f"üåç –û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–∞—è —Å—Ä–µ–¥–∞: {environment}")
    
    print("\nüéØ –ó–∞–∫–ª—é—á–µ–Ω–∏–µ:")
    if PROJECT_ROOT.exists():
        print("‚úÖ –ü—É—Ç–∏ —Ä–µ–∑–æ–ª–≤—è—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print("‚úÖ –≠—Ç–æ—Ç –∫–æ–¥ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤–æ –ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ Docker!")
    else:
        print("‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ–º –ø—É—Ç–µ–π")
        return False
    
    return True

if __name__ == "__main__":
    try:
        success = test_path_resolution()
        if success:
            print("\nüèÅ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
            sys.exit(0)
        else:
            print("\nüí• –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –ø—É—Ç—è–º–∏!")
            sys.exit(1)
    except Exception as e:
        print(f"\nüí• –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        sys.exit(1)
 