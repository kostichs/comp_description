#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ predator –∏–∑ —Ñ–∞–π–ª–∞
"""

import os
import sys
import logging
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ sys.path
PROJECT_ROOT = Path(__file__).parent
sys.path.insert(0, str(PROJECT_ROOT))

from src.data_io import load_and_prepare_company_names

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(levelname)s: %(message)s')
logger = logging.getLogger(__name__)

def test_predator_loading():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É predator –∏–∑ —Ñ–∞–π–ª–∞"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å–µ—Å—Å–∏—é
    test_file = "output/sessions/20250613_164826_criteria_analis19/input_criteria_analis19.csv"
    
    logger.info(f"üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É predator –∏–∑ —Ñ–∞–π–ª–∞: {test_file}")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–º–ø–∞–Ω–∏–∏
    companies = load_and_prepare_company_names(test_file)
    
    if companies:
        logger.info(f"‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(companies)} –∫–æ–º–ø–∞–Ω–∏–π:")
        for i, company in enumerate(companies):
            logger.info(f"   {i+1}. {company}")
            
            predator = company.get('predator')
            if predator:
                logger.info(f"      ‚úÖ PREDATOR –Ω–∞–π–¥–µ–Ω: '{predator}' (—Ç–∏–ø: {type(predator)})")
            else:
                logger.error(f"      ‚ùå PREDATOR –Ω–µ –Ω–∞–π–¥–µ–Ω!")
    else:
        logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–º–ø–∞–Ω–∏–∏")

if __name__ == "__main__":
    test_predator_loading() 